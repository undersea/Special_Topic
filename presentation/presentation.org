
* URLS                                                             :noexport:
** http://stackoverflow.com/questions/257605/ocaml-match-expression-inside-another-one

** http://caml.inria.fr/pub/docs/manual-ocaml/libref/index.html

** http://www.cs.jhu.edu/~scott/pl/lectures/caml-intro.html

** http://caml.inria.fr/pub/docs/oreilly-book/html/index.html

** http://caml.inria.fr/pub/docs/u3-ocaml/emacs/index.html

** http://caml.inria.fr/pub/docs/u3-ocaml/index.html

** http://pauillac.inria.fr/~ddr/camlp5/

** http://caml.inria.fr/pub/docs/tutorial-camlp4/index.html


* Role in SE
  + A function programming language



* Role within SDLC

* Similar tools

* Strengths and weaknesses

* Business readiness
  - License
  - Who backs it


* Who uses it

* Demonstration
#+tblname: example-table
| 1 | 2 |
| 2 | 3 |
| 3 | 4 |

#+source ocaml-length
#+begin_src ocaml :var table=example-table
let t = (fun b -> b);;
let u = (fun a -> (Array.to_list (Array.map t a)));;
let w = Array.to_list (Array.map u table);;
#+end_src

#+results:
| [1 2] | [2 3] | [3 4] |


#+source ocaml-to_list
#+begin_src ocaml
    let atable = [|[|1;2;3|];[|4;5;6|]|];;
    let rec to_list tablex n = if n = 0 then [] else
        (to_list tablex (n-1)) @ (Array.to_list (Array.get tablex (n-1)));;
    let n = Array.length atable;;
    let m = n - 1;;
    let l = [5;2;3];;
    let x = [3;2;3] @ [3;2;3;4;5];;
#+end_src

#+results:
| 1 | 2 | 3 |

